<?php


require_once "Controller.php";
require_once "../model/OfertaModelHandler.php";

class OfertaController extends Controller
{

    /*
         * Vamos a devolver un objeto RESPONSE (VISTA) en cada método, por lo que, a priori, necesitamos:
         *
         * header: A null normalmente
         * body: El recurso solicitado (o mensaje de resultado)
         * code: El código de respuesta (exitoso, error del cliente, error del servidor, etc...)
         * format: El formato de la respuesta (json normalmente), EXTRAIDO DEL FORMATO QUE ACEPTA EL REQUEST PASADO POR PARÁMETROS.
         *
         */

    function manageGetVerb(Request $request)
    {

        /*
         * Endpoints:
         *
         * ../ofertas       -> Devuelve una colección de todos los libros
         * ../ofertas/{id}  -> Devuelve un libro en concreto
         *
        */
        $header = null;
        $body = null;
        $code = null;
        $format = $request->getAccept();
        $id = null;

        //Assigning the HTTP response's body
        //Comprobamos si el recurso solicitado es una colección o es un recurso individual
        if(isset($request->getUrlElements()[1])){
            $id = $request->getUrlElements()[1];
            $body = OfertaModelHandler::getOfferById($id);
        } else {
            $body = OfertaModelHandler::getAllOffers(); //Esto deberia de estar ya en json?
        }

        //Assigning the HTTP response's code

        if($body != null){
            $code = "200";
        } else {

            if (OfertaModelHandler::isValid($id)) {
                $code = "404"; //Página no encontrada
            } else {
                $code = "400"; //Formato erróneo de la id
            }

        }

        //Creating the response object
        $response = new Response($code, null, $body, $format);
        $response->generate();

    }

    function manageDeleteVerb(Request $request){

        /*
         * Endpoints:
         *
         * ../ofertas/{id}/eliminar
         *
         */

        $header = null;
        $body = null;
        $code = null;
        $format = $request->getAccept();
        $id = null;

        $id = $request->getUrlElements()[1];

        //Assigning the HTTP response's body
        //Checking for a valid id
        if(OfertaModelHandler::isValid($id)) {
            if (OfertaModelHandler::deleteOffer($id)) {
                $body = "Deleted succesfully";
                $code = "200";
            } else {
                //Internal server error
                $code = "500";
                $body = "Oops! There was a problem :(";
            }
        } else {
            $code = "400";
        }

        $response = new Response($code, null, $body, $format);
        $response->generate();

    }

    function managePostVerb(Request $request)
    {
        parent::managePostVerb($request); // TODO: Change the autogenerated stub
    }

    function managePutVerb(Request $request)
    {
        parent::managePutVerb($request); // TODO: Change the autogenerated stub
    }
}